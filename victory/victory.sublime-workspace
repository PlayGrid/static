{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 1786,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "var $adminMenu = $('#navbar');\nvar $menuFixed = $('#menu-fixed');\nvar $hidden = true;\nvar vimeoPlayer = $f($('#vimeoplayer')[0]);\n\n$(document).ready(function(){\n    // When the player is ready, add listeners for pause, finish, and playProgress\n\n    vimeoPlayer.addEvent('ready', function() {\n        $('.watch').show();\n        vimeoPlayer.addEvent('finish', onFinish);\n    });\n\n    // Call the API when a button is pressed\n    $('#video').on('click', function() {\n    	vimeoPlayer.api('play');\n    	if (typeof ga != 'undefined')\n    		ga('send', 'event', 'videos', 'play', 'Trailer01');\n    	$('#video').hide();\n    	$('#player-wrapper').show()\n    });\n\n    function onFinish(id) {\n        $('#video').show();\n        $('#player-wrapper').hide()\n    }\n	\n	\n\n	$(window).scroll(function(){\n        if ($(this).scrollTop() > 200) {\n        	if($hidden){\n	        	clearTimeout($adminMenu.t);\n	        	$menuFixed.t = setTimeout((function() {\n	                $menuFixed.stop().fadeIn(500);\n	            }), 200);\n	            $adminMenu.stop().animate({\n	            	maxHeight: '85px',\n	            	height: '85px'\n	            }, 500);\n	            $hidden = false;\n            }\n        } else {\n        	if(!$hidden){\n	        	clearTimeout($menuFixed.t);\n	        	$adminMenu.t = setTimeout((function() {\n	        		$adminMenu.stop().animate({\n			        	maxHeight: '30px',\n		    	    	height: '30px'\n		        	}, 500);\n	        	}), 200)\n	            $menuFixed.stop().fadeOut(500);\n	            $hidden = true;\n	        }\n        }\n    });\n\n    $('.scroll').on('click', function(e){\n    	e.preventDefault();\n    	$('html, body').animate({\n        	scrollTop: $(\"#\"+$(this).data('scroll')).offset().top - 100\n    	}, 200);\n    });\n    \n    // detect content height changes and post to parent\n    var prevHeight = $('#content').height();\n    parent.postMessage({height: prevHeight}, '*');\n    $( window ).resize(function() {\n        var curHeight = $(\"#content\").height();            \n        if (prevHeight !== curHeight) {\n            parent.postMessage({height: curHeight}, '*');\n            prevHeight = curHeight;\n        }            \n    });\n\n\n    // Beta signup form ajax\n    $('#earlyAccess').submit(function (event) {\n        /* stop form from submitting normally */\n        event.preventDefault();\n\n        var url = getQueryParameter('apply_url') || \"http://api.playgrid.com/api/2.1/players/apply/\"\n\n        var request = $.ajax({\n            type: \"POST\",\n            url: url,\n            data: {email: $('#email').val(), note: $('#note').val()},\n            headers: {Authorization: \"PGP {{ request.game.untrusted_access_token }}\"},\n            dataType: 'json'\n        });\n \n        request.done(function( msg ) {\n            $(\"#earlyAccess .errors\").empty();\n            $('#apply-modal').modal('hide');\n            $('#messages .thanks').remove();\n            $('#messages').append('<div class=\"thanks alert alert-success\" style=\"display:none\" role=\"alert\">Thanks for applying!</div>');\n            $('#messages .thanks').slideDown().delay(5000).slideUp();\n            ga('send', 'event', 'beta', 'signup', 'cta');\n        });\n \n        request.fail(function( jqXHR, textStatus ) {\n            var message = \"foo\";\n            for(var key in jqXHR.responseJSON) {\n                $(\"#earlyAccess .errors\").append(\"<p>\"+jqXHR.responseJSON[key]+\"</p>\");\n            }\n        });\n    });\n\n    function    \n})\n\n\n",
			"file": "content/js/main.js",
			"file_size": 3418,
			"file_write_time": 1413566627000000,
			"settings":
			{
				"buffer_size": 3432,
				"line_ending": "Unix"
			}
		},
		{
			"file": "content/js/utils.js",
			"settings":
			{
				"buffer_size": 293,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/daronstinnett/projects/Static/victory/content/js/main.js"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "index.html",
					"settings":
					{
						"buffer_size": 1786,
						"regions":
						{
						},
						"selection":
						[
							[
								1545,
								1545
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "content/js/main.js",
					"settings":
					{
						"buffer_size": 3432,
						"regions":
						{
						},
						"selection":
						[
							[
								3422,
								3422
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 551.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "content/js/utils.js",
					"settings":
					{
						"buffer_size": 293,
						"regions":
						{
						},
						"selection":
						[
							[
								293,
								293
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true
}
